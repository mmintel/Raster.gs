/* creates a new grid column
 * ---
 * @author Marc Mintel <marc@mintel.me>
 * ---
 * @access private
 * ---
 * @param {map}    $conf   - configuration object for columns, prefix, gutter, combinations, helpers
 * @param {number} $column - column to fill
 * @param {number} $span   - span of columns
 * ---
 * @since 3.0.0
 */

@mixin _rgs-column($conf, $column, $span: null) {
    $columns: map-get($conf, columns);
    $prefix: map-get($conf, prefix);
    $gutter: map-get($conf, gutter);
    $helpers: map-get($conf, helpers);
    $combinations: map-get($conf, combinations);
    $columns: _rgs-parse-columns($columns);
    $numberOfColumns: length($columns);

    $lastIndicator: $column == $numberOfColumns;
    @if $span != null {
        $lastIndicator: $span == $numberOfColumns;
    }

    $clearLeftPlaceholder: #{$prefix}-clear-left;
    @if index($_rgs-clear-left-placeholders, $clearLeftPlaceholder) == null {
        @at-root {
            #{'%'+$clearLeftPlaceholder} {
                clear: left;
            }
        }
        $_rgs-clear-left-placeholders: append($_rgs-clear-left-placeholders, $clearLeftPlaceholder) !global;
    }


    $floatRightPlaceholder: #{$prefix}-float-right;
    @if $lastIndicator {
        @if index($_rgs-float-right-placeholders, $floatRightPlaceholder) == null {
            @at-root {
                #{'%'+$floatRightPlaceholder} {
                    float: right;
                }
            }
            $_rgs-float-right-placeholders: append($_rgs-float-right-placeholders, $floatRightPlaceholder) !global;
        }
    }

    $floatLeftPlaceholder: #{$prefix}-float-left;
    @if index($_rgs-float-left-placeholders, $floatLeftPlaceholder) == null {
        @at-root {
            #{'%'+$floatLeftPlaceholder} {
                float: left;
            }
        }
        $_rgs-float-left-placeholders: append($_rgs-float-left-placeholders, $floatLeftPlaceholder) !global;
    }

    $marginRightPlaceholder: #{$prefix}-margin-right;
    @if index($_rgs-margin-right-placeholders, $marginRightPlaceholder) == null {
        @at-root {
            #{'%'+$marginRightPlaceholder} {
                margin-right: -100%;
            }
        }
        $_rgs-margin-right-placeholders: append($_rgs-margin-right-placeholders, $marginRightPlaceholder) !global;
    }
    
    $marginLeftPlaceholder: #{$prefix}-placeholder-margin-#{ceil(_rgs-get-margin($column, $columns, $gutter))};
    @if $column != 1 {
        @if index($_rgs-margin-left-placeholders, $marginLeftPlaceholder) == null {
            @at-root {
                #{'%'+$marginLeftPlaceholder} {
                    margin-left: _rgs-parse-margin($column, $columns, $gutter);
                }
            }
            $_rgs-margin-left-placeholders: append($_rgs-margin-left-placeholders, $marginLeftPlaceholder) !global;
        }
    }
    $widthPlaceholder: #{$prefix}-placeholder-width-#{ceil(_rgs-get-width($column, $span, $columns, $gutter))};
    @if index($_rgs-width-placeholders, $widthPlaceholder) == null {
        @at-root {
            #{'%'+$widthPlaceholder} {
                width: _rgs-parse-width($column, $span, $columns, $gutter);
            }
        }
        $_rgs-width-placeholders: append($_rgs-width-placeholders, $widthPlaceholder) !global;
    }
    
    @if $column == 1 {
        @extend #{'%'+$floatLeftPlaceholder};
        @extend #{'%'+$clearLeftPlaceholder};
    } @else if $lastIndicator {
        @extend #{'%'+$floatRightPlaceholder};                
    } @else {
        @extend #{'%'+$marginLeftPlaceholder} !optional;
        @extend #{'%'+$floatLeftPlaceholder};
    } 
    @if not $lastIndicator {
        @extend #{'%'+$marginRightPlaceholder};
    }
    @extend #{'%'+$widthPlaceholder};
}