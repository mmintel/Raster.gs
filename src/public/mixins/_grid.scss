/* creates a new grid system
 * ---
 * @author Marc Mintel <marc@mintel.me>
 * ---
 * @access public
 * ---
 * @param {map} $conf - configuration object for columns, prefix, gutter, combinations, helpers
 * ---
 * @throws '$columns for mixin `raster` must be a number or a list.'
 * @throws '$columns for mixin `raster` can not be higher than 100 in total.'
 * @throws '$prefix for mixin `raster` must be a string.'
 * @throws '$gutter for mixin `raster` must be a number.'
 * @throws '$combinations for mixin `raster` must be a boolean.'
 * @throws '$helpers for mixin `raster` must be a boolean.'
 * ---
 * @since 3.0.0
 */

@mixin raster($conf:()) {
    $conf: map-merge($_rgs-defaults, $conf);
    $columns: map-get($conf, columns);
    $prefix: map-get($conf, prefix);
    $gutter: map-get($conf, gutter);
    $helpers: map-get($conf, helpers);
    $combinations: map-get($conf, combinations);

    @if type-of($columns) != number and type-of($columns) != list {
        @error '$columns for mixin `raster` must be a number or a list.';
    }
    @if type-of($columns) == list {
        $total-columns: 0;
        @each $column in $columns {
            $total-columns: $total-columns + $column;
        }
        @if $total-columns > 100 {
            @error '$columns for mixin `raster` can not be higher than 100 in total.';
        }
    }
    @if type-of($prefix) != string {
        @error '$prefix for mixin `raster` must be a string.';
    }
    @if type-of($gutter) != number {
        @error '$gutter for mixin `raster` must be a number.';
    }
    @if type-of($combinations) != bool {
        @error '$combinations for mixin `raster` must be a boolean.';
    }
    @if type-of($helpers) != bool {
        @error '$helpers for mixin `raster` must be a boolean.';
    }

    @include _rgs-grid($conf);
}