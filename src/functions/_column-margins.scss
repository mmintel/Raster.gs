/*
 * calculate the margins of each column related to the given ratios and return each value in a list
 * ---
 * @access private
 * ---
 * @param {list}   $ratios      - a list of ratios representing the columns
 * @param {number} $gutterWidth - number for spacing between columns
 * ---
 * @returns {list}
 */

@function _rs-columnMargins($ratios, $gutterWidth){
    @if type-of($ratios) != list {
        @warn '#{$ratios} is no valid input for $ratios of _rs-columnMargins.';
        @return false;
    }
    @if type-of($gutterWidth) != number or $gutterWidth < 0 {
        @warn '#{$gutterWidth} is no valid input for $gutterWidth of _rs-columnMargins.';
        @return false;
    }
    $columnWidths: _rs-columnWidths($ratios, $gutterWidth);
    $columns: length($ratios);
    $marginList: ();
    $margin: 0;
    @for $column from 1 through $columns {
        @for $m from 1 through ($column){
            @if $m == 1 {
                $margin: 0;
            } @else {
                $margin: $margin + nth($columnWidths, ($m - 1)) + ($gutterWidth);
            }
        }
        $marginList: append($marginList, $margin);
    }
    @return $marginList;
}